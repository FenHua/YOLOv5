# 参数设置
nc: 80                # 类别数
depth_multiple: 0.33  # 模型深度控制参数
width_multiple: 0.50  # 模型通道控制参数
anchors:
  - [10,13, 16,30, 33,23]          # P3/8
  - [30,61, 62,45, 59,119]         # P4/16
  - [116,90, 156,198, 373,326]     # P5/32

# YOLOv5 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Focus, [64, 3]],            # 0-P1/2  focus卷积操作，/2
   [-1, 1, Conv, [128, 3, 2]],         # 1-P2/4  标准卷积，步长2，/2
   [-1, 3, C3, [128]],                 # 执行CSP bottleneck
   [-1, 1, Conv, [256, 3, 2]],         # 3-P3/8  标准卷积，步长2，/2
   [-1, 9, C3, [256]],                 # 执行CSP bottleneck
   [-1, 1, Conv, [512, 3, 2]],         # 5-P4/16 标准卷积，步长2，/2
   [-1, 9, C3, [512]],                 # 执行CSP bottleneck
   [-1, 1, Conv, [1024, 3, 2]],        # 7-P5/32 标准卷积，步长2，/2
   [-1, 1, SPP, [1024, [5, 9, 13]]],   # spatial pyramid pooling（获取不同感受野下的特征）
   [-1, 3, C3, [1024, False]],         # 9  执行CSP bottleneck
  ]

# YOLOv5 head
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],    # 上采样 x2
   [[-1, 6], 1, Concat, [1]],                     # cat backbone P4 和第六层链接
   [-1, 3, C3, [512, False]],                     # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],    # 上采样 x2
   [[-1, 4], 1, Concat, [1]],                     # cat backbone P3
   [-1, 3, C3, [256, False]],                     # 17 (P3/8-small)  和第四层链接

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],                    # cat head P4
   [-1, 3, C3, [512, False]],                     # 20 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],                    #
   [[-1, 10], 1, Concat, [1]],                    # cat head P5
   [-1, 3, C3, [1024, False]],                    # 23 (P5/32-large)

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
